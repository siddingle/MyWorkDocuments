EMigrate-Backend
Its parameterized project
Choice Parameter
Name=ServiceName
Choices
AdministrationService
AuthenticationService
EmigrantService
ForeignRecruiterService
GatewayService
GrievanceService
NotificationService
RecruitingAgentService
ReportService
SecurityService
WorkflowService
PaymentService
InsuranceService
IntegrationService

pipeline {
      agent any
	  tools {
        maven 'Maven 363'
    }
     stages{
	    stage("Code"){
		   steps {
		       deleteDir()
		    echo "Cloning the code"
			  git branch: 'master',
              credentialsId: '182877e8-7386-4f6e-bf8b-1e65f5fb9264',
              url: 'https://apps.trigyn.com/gitlab/emigrate/emigratebackend.git'
		   
		   }
		}
		
		
		
		
		stage('Update pom.xml') {
            steps {
                script {
                    // Define the new version value
                    def newVersion = "1.0.${BUILD_NUMBER}"

                    // Update the pom.xml file using sed
                    sh "sed -i 's|<version>0.0.1-SNAPSHOT</version>|<version>${newVersion}</version>|' ${ServiceName}/pom.xml"
                }
            }
        }
		
		
		
		
		
		
		stage("build"){
		   steps {
		    echo "Buidling the code"
		     sh "mvn -f ${ServiceName}/pom.xml clean install -DskipTests"
		   }		
		}
	    stage("Archive Artifacts"){
	        steps {
	            echo "Archiving Artifacts"
	           
	           //   archiveArtifacts artifacts: 'SvrJsbJarFdr/AuthenticationService-0.0.1-SNAPSHOT.jar, SvrJsbJarFdr/services_UAT.properties', fingerprint: true
	                archiveArtifacts artifacts: 'SvrJsbJarFdr/*.jar, SvrJsbJarFdr/services_UAT.properties', fingerprint: true
	 
	                   echo "${BUILD_NUMBER}"
	            
	        }
	    }	
		
		stage("Push to Nexus"){
		   steps {
		    echo "Pushing the code"
		    script {
                //storing with 0.0.1-SNAPSHOT   //nexusArtifactUploader artifacts: [[artifactId: '${ServiceName}', classifier: '${BUILD_NUMBER}', file: '${JENKINS_HOME}/jobs/Pipeline/builds/${BUILD_NUMBER}/archive/SvrJsbJarFdr/${ServiceName}-0.0.1-SNAPSHOT.jar', type: 'jar']], credentialsId: '70f0d661-f381-460a-b18a-cffaa01ad2bc', groupId: 'com.gov.emigrate', nexusUrl: '${NEXUS_URL}', nexusVersion: 'nexus3', protocol: 'http', repository: 'emigrate-services-snapshot-repo', version: '0.0.1-SNAPSHOT'
                //storing with 1.0.currentbuildnumber-SNAPSHOT     // nexusArtifactUploader artifacts: [[artifactId: '${ServiceName}', classifier: '${BUILD_NUMBER}', file: '${JENKINS_HOME}/jobs/Pipeline/builds/${BUILD_NUMBER}/archive/SvrJsbJarFdr/${ServiceName}-1.0.${BUILD_NUMBER}.jar', type: 'jar']], credentialsId: '70f0d661-f381-460a-b18a-cffaa01ad2bc', groupId: 'com.gov.emigrate', nexusUrl: '${NEXUS_URL}', nexusVersion: 'nexus3', protocol: 'http', repository: 'emigrate-services-snapshot-repo', version: '1.0.${BUILD_NUMBER}-SNAPSHOT'
                   nexusArtifactUploader artifacts: [[artifactId: '${ServiceName}', classifier: '', file: '${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/archive/SvrJsbJarFdr/${ServiceName}-1.0.${BUILD_NUMBER}.jar', type: 'jar']], credentialsId: '70f0d661-f381-460a-b18a-cffaa01ad2bc', groupId: 'com.gov.emigrate.master', nexusUrl: '${NEXUS_URL}', nexusVersion: 'nexus3', protocol: 'http', repository: 'emigrate-services-release-repo', version: '1.0.${BUILD_NUMBER}'    
                  
                   
                    }
		   
		   }	
		}
		stage("Creating Docker Image"){
		   steps {
		  sh "sleep 10"     
		    echo "Deploying the container"
		  sh  "curl -u '${NEXUS_USERNAME}:${NEXUS_PASSWORD}' -L -X GET 'http://${NEXUS_URL}/service/rest/v1/search/assets/download?repository=emigrate-services-release-repo&maven.groupId=com.gov.emigrate.master&maven.artifactId=${ServiceName}&maven.baseVersion=1.0.${BUILD_NUMBER}&maven.extension=jar&sort=version'  --output ${ServiceName}-0.0.1-SNAPSHOT.jar >> temp.txt"
		  sh "cp ${ServiceName}/Dockerfile ." 
		   }
		}				
	 } 
}











EMigrate-Frontend

pipeline {
      agent any
       tools {
        // Define Node.js installation
        nodejs 'NodeJS 16.17.0'
    }
      environment {
        NODE_VERSION = '16.17.0'
    }
	 
	  
     stages{
         
	    stage("Code"){
		   steps {
		       
		    echo "Cloning the code"
			  git branch: '${BRANCH_NAME}',
              credentialsId: '3a80fdd9-2005-4d60-a3e2-7f7c195c9f76',
              url: 'https://apps.trigyn.com/gitlab/emigrate/emigrate.git'
             // url: 'https://apps.trigyn.com/gitlab/emigrate/emigratecdn.git'
		   
		   }
		}
		stage('Getting packages') {
            steps {
                script {
                    // Set npmrc file
                    def npmrcContent = """
                        registry=https://registry.npmjs.org/
                        // Specify any other npm configuration here
                    """
                    writeFile file: '.npmrc', text: npmrcContent

                  
                }
                    echo "Installing dependencies"
		            sh "npm install"
		            sh "npm run package" 
            }
        }
		
		stage("Build"){
		   steps {
		    //echo "Installing dependencies"
		    // sh "npm install"
		    // sh "npm run package" 
		    // sh "npm run build:uat"
		    
		    script {
		    if ("${ENVIRONMENT}" == 'DOCKER-DEV') {
            sh  "npm run build:dockerdev -- --base-href /emigrateSIT/ --deploy-url /emigrateSIT/" 
            }
            else if ("${ENVIRONMENT}" == 'UAT') {
            sh  "npm run build:clientUat -- --base-href /emigrateUAT/ --deploy-url /emigrateUAT/" 
            }
            else if ("${ENVIRONMENT}" == 'DATA-MIGRATION') {
            sh "npm run build:dm -- --base-href /emigrateUAT/ --deploy-url /emigrateUAT/" 
           }
            else if ("${ENVIRONMENT}" == 'DOCKER-KUBE') {
            sh "npm run build:dkub"
           }
            else if ("${ENVIRONMENT}" == 'UATK8SPROD') {
            sh "npm run build:uat"
           }
           
		    }
		    
		   }		
		}
		
		
		stage('Zip Directory') {
          steps {
             script {
                dir('dist/') {
                sh "zip -r ../e-migrate-${ENVIRONMENT}.zip ./e-migrate"
            }
           }
         }
        }
		
	    stage("Archive Artifacts"){
	        steps {
	            echo "Archiving Artifacts"
	            archiveArtifacts artifacts: '*.zip', onlyIfSuccessful: true, fingerprint: true, followSymlinks: false
	        }
	    }	
		
	
		stage("Upload Artifacts Nexus"){
		   steps {
		    echo "${BUILD_NUMBER}"
		    echo "uploading artifacts to nexus"
		    nexusArtifactUploader artifacts: [[artifactId: 'e-migrate-${ENVIRONMENT}', classifier: '${BUILD_NUMBER}', file: '${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/archive/e-migrate-${ENVIRONMENT}.zip', type: 'zip']], credentialsId: '70f0d661-f381-460a-b18a-cffaa01ad2bc', groupId: 'com.gov.emigrate', nexusUrl: '${NEXUS_URL}', nexusVersion: 'nexus3', protocol: 'http', repository: 'emigrate-services-release-repo', version: 'Release'
		   
		   }
		}
		
		stage("Docker Image"){
		   steps {
		    echo "${BUILD_NUMBER}"
		    echo ""
		    
		   }
		}
		
		
	 } 
}



